name: build # Name of action build

on: # Declare event type, branch to trigger actions
  push:
    branches: [ master ] # when pushing to branch master
  pull_request:
    branches: [ master ] # when pull request on branch master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
        go get -v github.com/mattn/goveralls

    - name: Build
      run: |
        mkdir -p bin; rm -rf bin/*
        go build -v -o bin/testcicd .

    - name: Test
      run: |
        rm -rf *.out
        go test -v -race -covermode atomic -coverprofile coverage.out ./...

    - name: Report Coverage
      env:
        COVERALLS_TOKEN: ${{ secrets.COVERAGE_TOKEN }}
      run: goveralls -v -service=github-actions -coverprofile=coverage.out -flagname=unittest

    - name: Report Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.out
        flags: unittests
        fail_ci_if_error: true
      # -------------------------------------
      # uses: ./
      # with:
      #   token: ${{ secrets.CODECOV_TOKEN }}
      #   file: ./coverage.out
      #   flags: unittests
      #   fail_ci_if_error: true
      #   # path_to_write_report: ./codecov_report.gz
      #   name: codecov-go
      #   verbose: true